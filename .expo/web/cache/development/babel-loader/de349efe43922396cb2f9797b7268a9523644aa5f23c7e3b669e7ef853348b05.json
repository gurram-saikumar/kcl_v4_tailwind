{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _newAppScreen = require(\"@react-native/new-app-screen\");\nvar _reactNative = require(\"react-native\");\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"/Users/nagasainathreddy/MyProject/App.tsx\";\nfunction App() {\n  var isDarkMode = (0, _reactNative.useColorScheme)() === 'dark';\n  return (0, _jsxRuntime.jsxs)(_reactNativeSafeAreaContext.SafeAreaProvider, {\n    children: [(0, _jsxRuntime.jsx)(_reactNative.StatusBar, {\n      barStyle: isDarkMode ? 'light-content' : 'dark-content'\n    }), (0, _jsxRuntime.jsx)(AppContent, {})]\n  });\n}\nfunction AppContent() {\n  var safeAreaInsets = (0, _reactNativeSafeAreaContext.useSafeAreaInsets)();\n  var isDarkMode = (0, _reactNative.useColorScheme)() === 'dark';\n  return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n    style: [styles.container, isDarkMode ? styles.containerDark : styles.containerLight],\n    children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n      style: [styles.headline, isDarkMode ? styles.headlineDark : styles.headlineLight],\n      children: \"Hello NativeWind \\uD83C\\uDF89\"\n    }), (0, _jsxRuntime.jsx)(_newAppScreen.NewAppScreen, {\n      templateFileName: \"App.tsx\",\n      safeAreaInsets: safeAreaInsets\n    })]\n  });\n}\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  containerLight: {\n    backgroundColor: '#ffffff'\n  },\n  containerDark: {\n    backgroundColor: '#000000'\n  },\n  headline: {\n    marginTop: 40,\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: '600'\n  },\n  headlineLight: {\n    color: '#2563eb'\n  },\n  headlineDark: {\n    color: '#60a5fa'\n  }\n});\nvar _default = exports.default = App;","map":{"version":3,"names":["_newAppScreen","require","_reactNative","_reactNativeSafeAreaContext","_jsxRuntime","_jsxFileName","App","isDarkMode","useColorScheme","jsxs","SafeAreaProvider","children","jsx","StatusBar","barStyle","AppContent","safeAreaInsets","useSafeAreaInsets","View","style","styles","container","containerDark","containerLight","Text","headline","headlineDark","headlineLight","NewAppScreen","templateFileName","StyleSheet","create","flex","backgroundColor","marginTop","textAlign","fontSize","fontWeight","color","_default","exports","default"],"sources":["/Users/nagasainathreddy/MyProject/App.tsx"],"sourcesContent":["import { NewAppScreen } from '@react-native/new-app-screen';\nimport { StatusBar, StyleSheet, Text, useColorScheme, View } from 'react-native';\nimport {\n  SafeAreaProvider,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\n\nfunction App() {\n  const isDarkMode = useColorScheme() === 'dark';\n\n  return (\n    <SafeAreaProvider>\n      <StatusBar barStyle={isDarkMode ? 'light-content' : 'dark-content'} />\n      <AppContent />\n    </SafeAreaProvider>\n  );\n}\n\nfunction AppContent() {\n  const safeAreaInsets = useSafeAreaInsets();\n  const isDarkMode = useColorScheme() === 'dark';\n\n  return (\n    <View\n      style={[\n        styles.container,\n        isDarkMode ? styles.containerDark : styles.containerLight,\n      ]}\n    >\n      <Text\n        style={[\n          styles.headline,\n          isDarkMode ? styles.headlineDark : styles.headlineLight,\n        ]}\n      >\n        Hello NativeWind ðŸŽ‰\n      </Text>\n\n      <NewAppScreen\n        templateFileName='App.tsx'\n        safeAreaInsets={safeAreaInsets}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  containerLight: {\n    backgroundColor: '#ffffff',\n  },\n  containerDark: {\n    backgroundColor: '#000000',\n  },\n  headline: {\n    marginTop: 40,\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: '600',\n  },\n  headlineLight: {\n    color: '#2563eb',\n  },\n  headlineDark: {\n    color: '#60a5fa',\n  },\n});\n\nexport default App;\n"],"mappings":";;;;AAAA,IAAAA,aAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,2BAAA,GAAAF,OAAA;AAGwC,IAAAG,WAAA,GAAAH,OAAA;AAAA,IAAAI,YAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EACb,IAAMC,UAAU,GAAG,IAAAC,2BAAc,EAAC,CAAC,KAAK,MAAM;EAE9C,OACE,IAAAJ,WAAA,CAAAK,IAAA,EAACN,2BAAA,CAAAO,gBAAgB;IAAAC,QAAA,GACf,IAAAP,WAAA,CAAAQ,GAAA,EAACV,YAAA,CAAAW,SAAS;MAACC,QAAQ,EAAEP,UAAU,GAAG,eAAe,GAAG;IAAe,CAAE,CAAC,EACtE,IAAAH,WAAA,CAAAQ,GAAA,EAACG,UAAU,IAAE,CAAC;EAAA,CACE,CAAC;AAEvB;AAEA,SAASA,UAAUA,CAAA,EAAG;EACpB,IAAMC,cAAc,GAAG,IAAAC,6CAAiB,EAAC,CAAC;EAC1C,IAAMV,UAAU,GAAG,IAAAC,2BAAc,EAAC,CAAC,KAAK,MAAM;EAE9C,OACE,IAAAJ,WAAA,CAAAK,IAAA,EAACP,YAAA,CAAAgB,IAAI;IACHC,KAAK,EAAE,CACLC,MAAM,CAACC,SAAS,EAChBd,UAAU,GAAGa,MAAM,CAACE,aAAa,GAAGF,MAAM,CAACG,cAAc,CACzD;IAAAZ,QAAA,GAEF,IAAAP,WAAA,CAAAQ,GAAA,EAACV,YAAA,CAAAsB,IAAI;MACHL,KAAK,EAAE,CACLC,MAAM,CAACK,QAAQ,EACflB,UAAU,GAAGa,MAAM,CAACM,YAAY,GAAGN,MAAM,CAACO,aAAa,CACvD;MAAAhB,QAAA,EACH;IAED,CAAM,CAAC,EAEP,IAAAP,WAAA,CAAAQ,GAAA,EAACZ,aAAA,CAAA4B,YAAY;MACXC,gBAAgB,EAAC,SAAS;MAC1Bb,cAAc,EAAEA;IAAe,CAChC,CAAC;EAAA,CACE,CAAC;AAEX;AAEA,IAAMI,MAAM,GAAGU,uBAAU,CAACC,MAAM,CAAC;EAC/BV,SAAS,EAAE;IACTW,IAAI,EAAE;EACR,CAAC;EACDT,cAAc,EAAE;IACdU,eAAe,EAAE;EACnB,CAAC;EACDX,aAAa,EAAE;IACbW,eAAe,EAAE;EACnB,CAAC;EACDR,QAAQ,EAAE;IACRS,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE,QAAQ;IACnBC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDV,aAAa,EAAE;IACbW,KAAK,EAAE;EACT,CAAC;EACDZ,YAAY,EAAE;IACZY,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAAC,IAAAC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEYnC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}